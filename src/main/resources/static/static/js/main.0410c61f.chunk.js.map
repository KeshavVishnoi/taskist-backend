{"version":3,"sources":["components/Head.js","components/InputData.js","components/Task.js","components/tasks.js","App.js","index.js"],"names":["Head","className","React","Component","InputData","taskRef","createRef","dateRef","createTask","event","preventDefault","task","current","value","date","currentTarget","reset","props","addTask","onSubmit","this","htmlFor","ref","required","type","name","placeholder","onFocus","target","onBlur","Task","parseDate","val","getMonth","getDate","editTask","a","decision","parseInt","prompt","newTask","axios","put","res","setTasks","data","newDate","dateformat","match","Date","getFullYear","finalDate","console","log","alert","onClick","deleteTask","index","Tasks","get","tasks","Object","keys","map","id","App","state","setState","addToDb","post","now","delete","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0410c61f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class Head extends React.Component{\r\n    render() {\r\n        return (\r\n            <div className=\"head\">\r\n            <header className=\"dflex\">\r\n                 <h2 className=\"c-name\">Taskist</h2>\r\n                 <span className=\"tagline\">Manage Your Daily Life</span>\r\n                 {/* <button className=\"btn-red\">Close</button> */}\r\n            </header>\r\n            </div>\r\n        );\r\n    };\r\n}","import React from 'react';\r\n\r\nexport default class InputData extends React.Component{\r\n    taskRef = React.createRef();\r\n    dateRef = React.createRef();\r\n\r\n    createTask = event => {\r\n        event.preventDefault();\r\n        // console.log(this.taskRef.current.value);\r\n        // console.log(this.dateRef.current.value);\r\n        const task = {\r\n            task: this.taskRef.current.value,\r\n            date: this.dateRef.current.value\r\n        }\r\n        // console.log(event.currentTarget); \r\n        event.currentTarget.reset();\r\n        this.props.addTask( task );\r\n       \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n            \r\n            <form className=\"inp-data\" onSubmit={this.createTask}>\r\n        \r\n                <label htmlFor=\"task\" className=\"lead\">Task</label>\r\n                <input ref={this.taskRef} required type=\"text\" name=\"task\" className=\"field\" placeholder=\"Task Name\"/>\r\n                <label htmlFor=\"date\" className=\"lead\">Date</label>\r\n                {/* <input ref={this.dateRef} required type=\"date\" name=\"date\" className=\"field\"/> */}\r\n                <input ref={this.dateRef} required type=\"text\" name=\"date\" className=\"field\" placeholder=\"MM/DD/YYYY\"\r\n                    onFocus={(event) => (event.target.type='date')} onBlur={(event) => (event.target.type='text')}/>\r\n                {/* <button onClick={this.createTask} className=\"btn-black\">Save Task</button> */}\r\n                <button type=\"submit\"  className=\"btn-black primary\">Add Task</button>\r\n            </form>\r\n                \r\n            </>\r\n            );\r\n    };\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nexport default class Task extends React.Component {\r\n    \r\n   \r\n   \r\n\r\n    parseDate = (date, val) => {\r\n            if(val === 1)\r\n            return date.getMonth() < 10 ?  (date.getMonth() + 1) : (date.getMonth() + 1);\r\n            else if(val ===2)\r\n            return date.getDate() < 10 ? '0'+date.getDate() : date.getDate();\r\n            \r\n    }\r\n\r\n    editTask = async () => {\r\n        // console.log(this.props.task);\r\n        const decision = parseInt(prompt(\"Enter 1 to change task or Enter 2 to change date\"));\r\n        let newTask, finalDate;\r\n        if( decision === 1 ){\r\n           newTask = prompt(\"Enter New Task\");\r\n        //    console.log(newTask);\r\n           this.props.task.task = newTask;\r\n        //    console.log(this.props.task.task);\r\n           const res = await axios.put(\"http://localhost:8080/tasks/edittask\", this.props.task);\r\n        //    console.log(res.data);\r\n           this.props.setTasks(res.data);\r\n        }   else if(decision === 2){\r\n                const newDate = prompt(\"Enter New Date in format YYYY-MM-DD\");\r\n                    if(newDate ){\r\n                        // eslint-disable-next-line no-useless-escape\r\n                        var dateformat = /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\r\n                        if(newDate.match(dateformat)){\r\n                            let date = new Date(newDate);\r\n                            finalDate = `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;\r\n                            finalDate = `${date.getFullYear()}-${this.parseDate(date,1)}-${this.parseDate(date,2)}`;\r\n                            // console.log(date.getDate() < 10 ? '0'+date.getDate() : date.getDate());\r\n                            console.log(finalDate );\r\n                            this.props.task.date = finalDate;\r\n                            // console.log(this.props.task.task);\r\n                            // console.log(this.parseDate(date, 2));\r\n                            const res = await axios.put(\"http://localhost:8080/tasks/edittask\", this.props.task);\r\n                            // console.log(Date.parse(newDate));\r\n                            this.props.setTasks(res.data);\r\n                        }else\r\n                        alert(\"Enter valid data\");\r\n            }\r\n        }else{\r\n            // console.log(\"try again\");\r\n           alert(\"Please enter a number between 1 and 2 , Try Again\");\r\n        }\r\n\r\n        \r\n\r\n    }\r\n\r\n    render(){\r\n        const {task, date} = this.props.task;\r\n        return (\r\n            <div className=\"task\">\r\n                <div>\r\n                    <span className=\"work\">\r\n                        Task : {task}  \r\n                    </span>\r\n                    <span className=\"time\">\r\n                        Date : {date}\r\n                    </span>\r\n                </div>\r\n                <div className=\"flex-task-btn\">\r\n                    <button onClick={this.editTask} className=\"btn edit\"><i className=\"fas fa-pen-square fa-2x\"></i></button>\r\n                    <button onClick={() => this.props.deleteTask(this.props.index)} className=\"btn \"><i className=\"fas fa-times-circle fa-2x\"></i></button>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Task from './Task';\r\nimport axios from 'axios';\r\nexport default class Tasks extends React.Component{\r\n    // state = {\r\n    //     tasks : []\r\n    // };\r\n    async componentDidMount() {\r\n        const data = await axios.get(\"/tasks/alltasks\");\r\n        // const tasks = {...this.state.tasks}\r\n        // console.log( data );\r\n        // console.log( {  ...(data.data.map(e => {return e.date}) )  } );\r\n        // console.log( {  ...(data.data.map(e => {return e.id}) )  } );\r\n        const tasks = { ...data.data };\r\n        this.props.setTasks(tasks);\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"tasks\">\r\n               { Object.keys(this.props.tasks).map( id => <Task key={id} index={id} task={this.props.tasks[id]} deleteTask={this.props.deleteTask} setTasks={this.props.setTasks}/> )}\r\n                \r\n            </div>\r\n        );\r\n    };\r\n}","import React from 'react';\nimport Head from './components/Head';\nimport InputData from './components/InputData';\nimport Tasks from './components/tasks';\nimport axios from 'axios';\nimport './index.css';\nclass App extends React.Component{\n  state = {\n    tasks : {\n      \n    }\n  }\n\n  setTasks = task => {\n    // const stateTasks = this.state;\n    this.setState({tasks : task});\n    // console.log(this.state);\n    console.log(\"rerender\");\n  }\n\n  addToDb = async task => {\n    console.log(task);\n    const data = await axios.post(\"/tasks/addtask\", task);\n    // return data.data[data.data.length - 1].id;\n    this.setState({ ...data.data });\n    this.setTasks({ ...data.data });\n  }\n\n  addTask = async task => {\n    //copy state\n    const tasks = {...this.state.tasks}\n    //add to state\n     this.addToDb( task );\n    tasks[`id${Date.now()}`] = task;\n    console.log(tasks);\n    const data = await axios.get(\"/tasks/alltasks\");\n    this.setTasks({ ...data.data });\n    // this.setState({tasks: tasks});\n    console.log(data);\n    // console.log(task);\n  }\n\n  deleteTask = async id => {\n    const tasks = {...this.state.tasks}\n    //add to state\n    console.log((tasks[id].id));\n    axios.delete(\"/tasks/deletetask/\" + (tasks[id].id));\n    // axios.delete(\"http://localhost:8080/tasks/deletetask/\" + (tasks[id].id)).then(res => {\n    //   alert(\"deleted\" + res);\n    // });\n    delete tasks[id];\n\n    this.setState({tasks: tasks});\n  }\n\n  render(){\n    return (\n      <>\n       <div className=\"app\"> \n        <Head />\n        <InputData addTask={this.addTask}/>\n        <Tasks setTasks={this.setTasks} tasks={this.state.tasks} deleteTask={this.deleteTask}/>\n       </div>\n       </>\n    );\n\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import AppHome from './AppHome';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n  );\n  \n  // If you want to start measuring performance in your app, pass a function\n  // to log results (for example: reportWebVitals(console.log))\n  // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// import reportWebVitals from './reportWebVitals';\n// reportWebVitals();\n"],"sourceRoot":""}